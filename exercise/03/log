
hello2.o:     file format elf64-x86-64
hello2.o
architecture: i386:x86-64, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x0000000000000000

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00000022  0000000000000000  0000000000000000  00000040  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000008  0000000000000000  0000000000000000  00000064  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  0000000000000000  0000000000000000  0000006c  2**2
                  ALLOC
  3 .rodata       00000011  0000000000000000  0000000000000000  0000006c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .debug_info   00000364  0000000000000000  0000000000000000  0000007d  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 000000ff  0000000000000000  0000000000000000  000003e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000030  0000000000000000  0000000000000000  000004e0  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
  7 .debug_line   00000115  0000000000000000  0000000000000000  00000510  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
  8 .debug_str    00000329  0000000000000000  0000000000000000  00000625  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .comment      0000002c  0000000000000000  0000000000000000  0000094e  2**0
                  CONTENTS, READONLY
 10 .note.GNU-stack 00000000  0000000000000000  0000000000000000  0000097a  2**0
                  CONTENTS, READONLY
 11 .note.gnu.property 00000020  0000000000000000  0000000000000000  00000980  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .eh_frame     00000038  0000000000000000  0000000000000000  000009a0  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 hello2.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000000 l     O .bss	0000000000000004 static_var_uninit.2318
0000000000000004 l     O .data	0000000000000004 static_var.2317
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .note.gnu.property	0000000000000000 .note.gnu.property
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 g     O .data	0000000000000004 global_init
0000000000000000 g     O .rodata	0000000000000004 global_const
0000000000000000 g     F .text	0000000000000022 main
0000000000000000         *UND*	0000000000000000 _GLOBAL_OFFSET_TABLE_
0000000000000000         *UND*	0000000000000000 puts



Disassembly of section .text:

0000000000000000 <main>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	c7 45 fc 44 44 44 44 	movl   $0x44444444,-0x4(%rbp)
  13:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 1a <main+0x1a>
			16: R_X86_64_PC32	.rodata
  1a:	e8 00 00 00 00       	callq  1f <main+0x1f>
			1b: R_X86_64_PLT32	puts-0x4
  1f:	90                   	nop
  20:	c9                   	leaveq 
  21:	c3                   	retq   

Disassembly of section .data:

0000000000000000 <global_init>:
   0:	11 11                	adc    %edx,(%rcx)
   2:	11 11                	adc    %edx,(%rcx)

0000000000000004 <static_var.2317>:
   4:	33 33                	xor    (%rbx),%esi
   6:	33 33                	xor    (%rbx),%esi

Disassembly of section .bss:

0000000000000000 <static_var_uninit.2318>:
   0:	00 00                	add    %al,(%rax)
   2:	00 00                	add    %al,(%rax)

Disassembly of section .rodata:

0000000000000000 <global_const>:
   0:	22 22                	and    (%rdx),%ah
   2:	22 22                	and    (%rdx),%ah
   4:	68 65 6c 6c 6f       	pushq  $0x6f6c6c65
   9:	20 77 6f             	and    %dh,0x6f(%rdi)
   c:	72 6c                	jb     7a <static_var.2317+0x76>
   e:	64 21 00             	and    %eax,%fs:(%rax)

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	60                   	(bad)  
   1:	03 00                	add    (%rax),%eax
   3:	00 04 00             	add    %al,(%rax,%rax,1)
   6:	00 00                	add    %al,(%rax)
			6: R_X86_64_32	.debug_abbrev
   8:	00 00                	add    %al,(%rax)
   a:	08 01                	or     %al,(%rcx)
   c:	00 00                	add    %al,(%rax)
			c: R_X86_64_32	.debug_str+0x1a2
   e:	00 00                	add    %al,(%rax)
  10:	0c 00                	or     $0x0,%al
			11: R_X86_64_32	.debug_str+0x320
  12:	00 00                	add    %al,(%rax)
  14:	00 00                	add    %al,(%rax)
			15: R_X86_64_32	.debug_str+0xcc
  16:	00 00                	add    %al,(%rax)
  18:	00 00                	add    %al,(%rax)
			19: R_X86_64_64	.text
  1a:	00 00                	add    %al,(%rax)
  1c:	00 00                	add    %al,(%rax)
  1e:	00 00                	add    %al,(%rax)
  20:	00 22                	add    %ah,(%rdx)
  22:	00 00                	add    %al,(%rax)
  24:	00 00                	add    %al,(%rax)
  26:	00 00                	add    %al,(%rax)
  28:	00 00                	add    %al,(%rax)
			29: R_X86_64_32	.debug_line
  2a:	00 00                	add    %al,(%rax)
  2c:	00 02                	add    %al,(%rdx)
  2e:	00 00                	add    %al,(%rax)
			2e: R_X86_64_32	.debug_str+0x4a
  30:	00 00                	add    %al,(%rax)
  32:	02 d1                	add    %cl,%dl
  34:	17                   	(bad)  
  35:	39 00                	cmp    %eax,(%rax)
  37:	00 00                	add    %al,(%rax)
  39:	03 08                	add    (%rax),%ecx
  3b:	07                   	(bad)  
  3c:	00 00                	add    %al,(%rax)
			3c: R_X86_64_32	.debug_str+0x25f
  3e:	00 00                	add    %al,(%rax)
  40:	03 04 07             	add    (%rdi,%rax,1),%eax
  43:	00 00                	add    %al,(%rax)
			43: R_X86_64_32	.debug_str+0x13e
  45:	00 00                	add    %al,(%rax)
  47:	04 08                	add    $0x8,%al
  49:	03 01                	add    (%rcx),%eax
  4b:	08 00                	or     %al,(%rax)
			4c: R_X86_64_32	.debug_str+0x11b
  4d:	00 00                	add    %al,(%rax)
  4f:	00 03                	add    %al,(%rbx)
  51:	02 07                	add    (%rdi),%al
  53:	00 00                	add    %al,(%rax)
			53: R_X86_64_32	.debug_str+0x185
  55:	00 00                	add    %al,(%rax)
  57:	03 01                	add    (%rcx),%eax
  59:	06                   	(bad)  
  5a:	00 00                	add    %al,(%rax)
			5a: R_X86_64_32	.debug_str+0x129
  5c:	00 00                	add    %al,(%rax)
  5e:	03 02                	add    (%rdx),%eax
  60:	05 00 00 00 00       	add    $0x0,%eax
			61: R_X86_64_32	.debug_str+0x40
  65:	05 04 05 69 6e       	add    $0x6e690504,%eax
  6a:	74 00                	je     6c <.debug_info+0x6c>
  6c:	06                   	(bad)  
  6d:	65 00 00             	add    %al,%gs:(%rax)
  70:	00 03                	add    %al,(%rbx)
  72:	08 05 00 00 00 00    	or     %al,0x0(%rip)        # 78 <.debug_info+0x78>
			74: R_X86_64_32	.debug_str+0xc3
  78:	02 00                	add    (%rax),%al
			79: R_X86_64_32	.debug_str+0x289
  7a:	00 00                	add    %al,(%rax)
  7c:	00 03                	add    %al,(%rbx)
  7e:	98                   	cwtl   
  7f:	19 71 00             	sbb    %esi,0x0(%rcx)
  82:	00 00                	add    %al,(%rax)
  84:	02 00                	add    (%rax),%al
			85: R_X86_64_32	.debug_str+0x27f
  86:	00 00                	add    %al,(%rax)
  88:	00 03                	add    %al,(%rbx)
  8a:	99                   	cltd   
  8b:	1b 71 00             	sbb    0x0(%rcx),%esi
  8e:	00 00                	add    %al,(%rax)
  90:	07                   	(bad)  
  91:	08 96 00 00 00 03    	or     %dl,0x3000000(%rsi)
  97:	01 06                	add    %eax,(%rsi)
  99:	00 00                	add    %al,(%rax)
			99: R_X86_64_32	.debug_str+0x198
  9b:	00 00                	add    %al,(%rax)
  9d:	06                   	(bad)  
  9e:	96                   	xchg   %eax,%esi
  9f:	00 00                	add    %al,(%rax)
  a1:	00 08                	add    %cl,(%rax)
  a3:	00 00                	add    %al,(%rax)
			a3: R_X86_64_32	.debug_str+0x112
  a5:	00 00                	add    %al,(%rax)
  a7:	d8 04 31             	fadds  (%rcx,%rsi,1)
  aa:	08 29                	or     %ch,(%rcx)
  ac:	02 00                	add    (%rax),%al
  ae:	00 09                	add    %cl,(%rcx)
  b0:	00 00                	add    %al,(%rax)
			b0: R_X86_64_32	.debug_str+0x72
  b2:	00 00                	add    %al,(%rax)
  b4:	04 33                	add    $0x33,%al
  b6:	07                   	(bad)  
  b7:	65 00 00             	add    %al,%gs:(%rax)
  ba:	00 00                	add    %al,(%rax)
  bc:	09 00                	or     %eax,(%rax)
			bd: R_X86_64_32	.debug_str+0x178
  be:	00 00                	add    %al,(%rax)
  c0:	00 04 36             	add    %al,(%rsi,%rsi,1)
  c3:	09 90 00 00 00 08    	or     %edx,0x8000000(%rax)
  c9:	09 00                	or     %eax,(%rax)
			ca: R_X86_64_32	.debug_str+0x9c
  cb:	00 00                	add    %al,(%rax)
  cd:	00 04 37             	add    %al,(%rdi,%rsi,1)
  d0:	09 90 00 00 00 10    	or     %edx,0x10000000(%rax)
  d6:	09 00                	or     %eax,(%rax)
			d7: R_X86_64_32	.debug_str+0x2ca
  d8:	00 00                	add    %al,(%rax)
  da:	00 04 38             	add    %al,(%rax,%rdi,1)
  dd:	09 90 00 00 00 18    	or     %edx,0x18000000(%rax)
  e3:	09 00                	or     %eax,(%rax)
			e4: R_X86_64_32	.debug_str+0x160
  e5:	00 00                	add    %al,(%rax)
  e7:	00 04 39             	add    %al,(%rcx,%rdi,1)
  ea:	09 90 00 00 00 20    	or     %edx,0x20000000(%rax)
  f0:	09 00                	or     %eax,(%rax)
			f1: R_X86_64_32	.debug_str+0x64
  f2:	00 00                	add    %al,(%rax)
  f4:	00 04 3a             	add    %al,(%rdx,%rdi,1)
  f7:	09 90 00 00 00 28    	or     %edx,0x28000000(%rax)
  fd:	09 00                	or     %eax,(%rax)
			fe: R_X86_64_32	.debug_str+0x271
  ff:	00 00                	add    %al,(%rax)
 101:	00 04 3b             	add    %al,(%rbx,%rdi,1)
 104:	09 90 00 00 00 30    	or     %edx,0x30000000(%rax)
 10a:	09 00                	or     %eax,(%rax)
			10b: R_X86_64_32	.debug_str+0x86
 10c:	00 00                	add    %al,(%rax)
 10e:	00 04 3c             	add    %al,(%rsp,%rdi,1)
 111:	09 90 00 00 00 38    	or     %edx,0x38000000(%rax)
 117:	09 00                	or     %eax,(%rax)
			118: R_X86_64_32	.debug_str
 119:	00 00                	add    %al,(%rax)
 11b:	00 04 3d 09 90 00 00 	add    %al,0x9009(,%rdi,1)
 122:	00 40 09             	add    %al,0x9(%rax)
 125:	00 00                	add    %al,(%rax)
			125: R_X86_64_32	.debug_str+0x2e7
 127:	00 00                	add    %al,(%rax)
 129:	04 40                	add    $0x40,%al
 12b:	09 90 00 00 00 48    	or     %edx,0x48000000(%rax)
 131:	09 00                	or     %eax,(%rax)
			132: R_X86_64_32	.debug_str+0x2a6
 133:	00 00                	add    %al,(%rax)
 135:	00 04 41             	add    %al,(%rcx,%rax,2)
 138:	09 90 00 00 00 50    	or     %edx,0x50000000(%rax)
 13e:	09 00                	or     %eax,(%rax)
			13f: R_X86_64_32	.debug_str+0x33
 140:	00 00                	add    %al,(%rax)
 142:	00 04 42             	add    %al,(%rdx,%rax,2)
 145:	09 90 00 00 00 58    	or     %edx,0x58000000(%rax)
 14b:	09 00                	or     %eax,(%rax)
			14c: R_X86_64_32	.debug_str+0x93
 14d:	00 00                	add    %al,(%rax)
 14f:	00 04 44             	add    %al,(%rsp,%rax,2)
 152:	16                   	(bad)  
 153:	42 02 00             	rex.X add (%rax),%al
 156:	00 60 09             	add    %ah,0x9(%rax)
 159:	00 00                	add    %al,(%rax)
			159: R_X86_64_32	.debug_str+0x291
 15b:	00 00                	add    %al,(%rax)
 15d:	04 46                	add    $0x46,%al
 15f:	14 48                	adc    $0x48,%al
 161:	02 00                	add    (%rax),%al
 163:	00 68 09             	add    %ch,0x9(%rax)
 166:	00 00                	add    %al,(%rax)
			166: R_X86_64_32	.debug_str+0x301
 168:	00 00                	add    %al,(%rax)
 16a:	04 48                	add    $0x48,%al
 16c:	07                   	(bad)  
 16d:	65 00 00             	add    %al,%gs:(%rax)
 170:	00 70 09             	add    %dh,0x9(%rax)
 173:	00 00                	add    %al,(%rax)
			173: R_X86_64_32	.debug_str+0x2bc
 175:	00 00                	add    %al,(%rax)
 177:	04 49                	add    $0x49,%al
 179:	07                   	(bad)  
 17a:	65 00 00             	add    %al,%gs:(%rax)
 17d:	00 74 09 00          	add    %dh,0x0(%rcx,%rcx,1)
			180: R_X86_64_32	.debug_str+0xc
 181:	00 00                	add    %al,(%rax)
 183:	00 04 4a             	add    %al,(%rdx,%rcx,2)
 186:	0b 78 00             	or     0x0(%rax),%edi
 189:	00 00                	add    %al,(%rax)
 18b:	78 09                	js     196 <.debug_info+0x196>
 18d:	00 00                	add    %al,(%rax)
			18d: R_X86_64_32	.debug_str+0xf1
 18f:	00 00                	add    %al,(%rax)
 191:	04 4d                	add    $0x4d,%al
 193:	12 50 00             	adc    0x0(%rax),%dl
 196:	00 00                	add    %al,(%rax)
 198:	80 09 00             	orb    $0x0,(%rcx)
			19a: R_X86_64_32	.debug_str+0x2d8
 19b:	00 00                	add    %al,(%rax)
 19d:	00 04 4e             	add    %al,(%rsi,%rcx,2)
 1a0:	0f 57 00             	xorps  (%rax),%xmm0
 1a3:	00 00                	add    %al,(%rax)
 1a5:	82                   	(bad)  
 1a6:	09 00                	or     %eax,(%rax)
			1a7: R_X86_64_32	.debug_str+0x156
 1a8:	00 00                	add    %al,(%rax)
 1aa:	00 04 4f             	add    %al,(%rdi,%rcx,2)
 1ad:	08 4e 02             	or     %cl,0x2(%rsi)
 1b0:	00 00                	add    %al,(%rax)
 1b2:	83 09 00             	orl    $0x0,(%rcx)
			1b4: R_X86_64_32	.debug_str+0xbd
 1b5:	00 00                	add    %al,(%rax)
 1b7:	00 04 51             	add    %al,(%rcx,%rdx,2)
 1ba:	0f 5e 02             	divps  (%rdx),%xmm0
 1bd:	00 00                	add    %al,(%rax)
 1bf:	88 09                	mov    %cl,(%rcx)
 1c1:	00 00                	add    %al,(%rax)
			1c1: R_X86_64_32	.debug_str+0x51
 1c3:	00 00                	add    %al,(%rax)
 1c5:	04 59                	add    $0x59,%al
 1c7:	0d 84 00 00 00       	or     $0x84,%eax
 1cc:	90                   	nop
 1cd:	09 00                	or     %eax,(%rax)
			1ce: R_X86_64_32	.debug_str+0x135
 1cf:	00 00                	add    %al,(%rax)
 1d1:	00 04 5b             	add    %al,(%rbx,%rbx,2)
 1d4:	17                   	(bad)  
 1d5:	69 02 00 00 98 09    	imul   $0x9980000,(%rdx),%eax
 1db:	00 00                	add    %al,(%rax)
			1db: R_X86_64_32	.debug_str+0x233
 1dd:	00 00                	add    %al,(%rax)
 1df:	04 5c                	add    $0x5c,%al
 1e1:	19 74 02 00          	sbb    %esi,0x0(%rdx,%rax,1)
 1e5:	00 a0 09 00 00 00    	add    %ah,0x9(%rax)
			1e8: R_X86_64_32	.debug_str+0x23e
 1eb:	00 04 5d 14 48 02 00 	add    %al,0x24814(,%rbx,2)
 1f2:	00 a8 09 00 00 00    	add    %ch,0x9(%rax)
			1f5: R_X86_64_32	.debug_str+0xa9
 1f8:	00 04 5e             	add    %al,(%rsi,%rbx,2)
 1fb:	09 47 00             	or     %eax,0x0(%rdi)
 1fe:	00 00                	add    %al,(%rax)
 200:	b0 09                	mov    $0x9,%al
 202:	00 00                	add    %al,(%rax)
			202: R_X86_64_32	.debug_str+0x24c
 204:	00 00                	add    %al,(%rax)
 206:	04 5f                	add    $0x5f,%al
 208:	0a 2d 00 00 00 b8    	or     -0x48000000(%rip),%ch        # ffffffffb800020e <static_var.2317+0xffffffffb800020a>
 20e:	09 00                	or     %eax,(%rax)
			20f: R_X86_64_32	.debug_str+0x2c4
 210:	00 00                	add    %al,(%rax)
 212:	00 04 60             	add    %al,(%rax,%riz,2)
 215:	07                   	(bad)  
 216:	65 00 00             	add    %al,%gs:(%rax)
 219:	00 c0                	add    %al,%al
 21b:	09 00                	or     %eax,(%rax)
			21c: R_X86_64_32	.debug_str+0x16f
 21d:	00 00                	add    %al,(%rax)
 21f:	00 04 62             	add    %al,(%rdx,%riz,2)
 222:	08 7a 02             	or     %bh,0x2(%rdx)
 225:	00 00                	add    %al,(%rax)
 227:	c4                   	(bad)  
 228:	00 02                	add    %al,(%rdx)
 22a:	00 00                	add    %al,(%rax)
			22a: R_X86_64_32	.debug_str+0x309
 22c:	00 00                	add    %al,(%rax)
 22e:	05 07 19 a2 00       	add    $0xa21907,%eax
 233:	00 00                	add    %al,(%rax)
 235:	0a 00                	or     (%rax),%al
			236: R_X86_64_32	.debug_str+0x315
 237:	00 00                	add    %al,(%rax)
 239:	00 04 2b             	add    %al,(%rbx,%rbp,1)
 23c:	0e                   	(bad)  
 23d:	0b 00                	or     (%rax),%eax
			23e: R_X86_64_32	.debug_str+0x14b
 23f:	00 00                	add    %al,(%rax)
 241:	00 07                	add    %al,(%rdi)
 243:	08 3d 02 00 00 07    	or     %bh,0x7000002(%rip)        # 700024b <static_var.2317+0x7000247>
 249:	08 a2 00 00 00 0c    	or     %ah,0xc000000(%rdx)
 24f:	96                   	xchg   %eax,%esi
 250:	00 00                	add    %al,(%rax)
 252:	00 5e 02             	add    %bl,0x2(%rsi)
 255:	00 00                	add    %al,(%rax)
 257:	0d 39 00 00 00       	or     $0x39,%eax
 25c:	00 00                	add    %al,(%rax)
 25e:	07                   	(bad)  
 25f:	08 35 02 00 00 0b    	or     %dh,0xb000002(%rip)        # b000267 <static_var.2317+0xb000263>
 265:	00 00                	add    %al,(%rax)
			265: R_X86_64_32	.debug_str+0x253
 267:	00 00                	add    %al,(%rax)
 269:	07                   	(bad)  
 26a:	08 64 02 00          	or     %ah,0x0(%rdx,%rax,1)
 26e:	00 0b                	add    %cl,(%rbx)
 270:	00 00                	add    %al,(%rax)
			270: R_X86_64_32	.debug_str+0x298
 272:	00 00                	add    %al,(%rax)
 274:	07                   	(bad)  
 275:	08 6f 02             	or     %ch,0x2(%rdi)
 278:	00 00                	add    %al,(%rax)
 27a:	0c 96                	or     $0x96,%al
 27c:	00 00                	add    %al,(%rax)
 27e:	00 8a 02 00 00 0d    	add    %cl,0xd000002(%rdx)
 284:	39 00                	cmp    %eax,(%rax)
 286:	00 00                	add    %al,(%rax)
 288:	13 00                	adc    (%rax),%eax
 28a:	0e                   	(bad)  
 28b:	00 00                	add    %al,(%rax)
			28b: R_X86_64_32	.debug_str+0x2b6
 28d:	00 00                	add    %al,(%rax)
 28f:	06                   	(bad)  
 290:	89 0e                	mov    %ecx,(%rsi)
 292:	96                   	xchg   %eax,%esi
 293:	02 00                	add    (%rax),%al
 295:	00 07                	add    %al,(%rdi)
 297:	08 29                	or     %ch,(%rcx)
 299:	02 00                	add    (%rax),%al
 29b:	00 0e                	add    %cl,(%rsi)
 29d:	00 00                	add    %al,(%rax)
			29d: R_X86_64_32	.debug_str+0x30e
 29f:	00 00                	add    %al,(%rax)
 2a1:	06                   	(bad)  
 2a2:	8a 0e                	mov    (%rsi),%cl
 2a4:	96                   	xchg   %eax,%esi
 2a5:	02 00                	add    (%rax),%al
 2a7:	00 0e                	add    %cl,(%rsi)
 2a9:	00 00                	add    %al,(%rax)
			2a9: R_X86_64_32	.debug_str+0xb6
 2ab:	00 00                	add    %al,(%rax)
 2ad:	06                   	(bad)  
 2ae:	8b 0e                	mov    (%rsi),%ecx
 2b0:	96                   	xchg   %eax,%esi
 2b1:	02 00                	add    (%rax),%al
 2b3:	00 0e                	add    %cl,(%rsi)
 2b5:	00 00                	add    %al,(%rax)
			2b5: R_X86_64_32	.debug_str+0x2a
 2b7:	00 00                	add    %al,(%rax)
 2b9:	07                   	(bad)  
 2ba:	1a 0c 65 00 00 00 0c 	sbb    0xc000000(,%riz,2),%cl
 2c1:	d6                   	(bad)  
 2c2:	02 00                	add    (%rax),%al
 2c4:	00 cb                	add    %cl,%bl
 2c6:	02 00                	add    (%rax),%al
 2c8:	00 0f                	add    %cl,(%rdi)
 2ca:	00 06                	add    %al,(%rsi)
 2cc:	c0 02 00             	rolb   $0x0,(%rdx)
 2cf:	00 07                	add    %al,(%rdi)
 2d1:	08 9d 00 00 00 06    	or     %bl,0x6000000(%rbp)
 2d7:	d0 02                	rolb   (%rdx)
 2d9:	00 00                	add    %al,(%rax)
 2db:	0e                   	(bad)  
 2dc:	00 00                	add    %al,(%rax)
			2dc: R_X86_64_32	.debug_str+0x2f5
 2de:	00 00                	add    %al,(%rax)
 2e0:	07                   	(bad)  
 2e1:	1b 1a                	sbb    (%rdx),%ebx
 2e3:	cb                   	lret   
 2e4:	02 00                	add    (%rax),%al
 2e6:	00 10                	add    %dl,(%rax)
 2e8:	00 00                	add    %al,(%rax)
			2e8: R_X86_64_32	.debug_str+0xfd
 2ea:	00 00                	add    %al,(%rax)
 2ec:	01 03                	add    %eax,(%rbx)
 2ee:	05 65 00 00 00       	add    $0x65,%eax
 2f3:	09 03                	or     %eax,(%rbx)
 2f5:	00 00                	add    %al,(%rax)
			2f5: R_X86_64_64	global_init
 2f7:	00 00                	add    %al,(%rax)
 2f9:	00 00                	add    %al,(%rax)
 2fb:	00 00                	add    %al,(%rax)
 2fd:	10 00                	adc    %al,(%rax)
			2fe: R_X86_64_32	.debug_str+0x79
 2ff:	00 00                	add    %al,(%rax)
 301:	00 01                	add    %al,(%rcx)
 303:	04 0b                	add    $0xb,%al
 305:	6c                   	insb   (%dx),%es:(%rdi)
 306:	00 00                	add    %al,(%rax)
 308:	00 09                	add    %cl,(%rcx)
 30a:	03 00                	add    (%rax),%eax
			30b: R_X86_64_64	global_const
 30c:	00 00                	add    %al,(%rax)
 30e:	00 00                	add    %al,(%rax)
 310:	00 00                	add    %al,(%rax)
 312:	00 11                	add    %dl,(%rcx)
 314:	00 00                	add    %al,(%rax)
			314: R_X86_64_32	.debug_str+0x19d
 316:	00 00                	add    %al,(%rax)
 318:	01 06                	add    %eax,(%rsi)
 31a:	06                   	(bad)  
 31b:	00 00                	add    %al,(%rax)
			31b: R_X86_64_64	.text
 31d:	00 00                	add    %al,(%rax)
 31f:	00 00                	add    %al,(%rax)
 321:	00 00                	add    %al,(%rax)
 323:	22 00                	and    (%rax),%al
 325:	00 00                	add    %al,(%rax)
 327:	00 00                	add    %al,(%rax)
 329:	00 00                	add    %al,(%rax)
 32b:	01 9c 12 00 00 00 00 	add    %ebx,0x0(%rdx,%rdx,1)
			32e: R_X86_64_32	.debug_str+0x59
 332:	01 08                	add    %ecx,(%rax)
 334:	14 65                	adc    $0x65,%al
 336:	00 00                	add    %al,(%rax)
 338:	00 33                	add    %dh,(%rbx)
 33a:	33 33                	xor    (%rbx),%esi
 33c:	33 13                	xor    (%rbx),%edx
 33e:	00 00                	add    %al,(%rax)
			33e: R_X86_64_32	.debug_str+0x18
 340:	00 00                	add    %al,(%rax)
 342:	01 09                	add    %ecx,(%rcx)
 344:	14 65                	adc    $0x65,%al
 346:	00 00                	add    %al,(%rax)
 348:	00 09                	add    %cl,(%rcx)
 34a:	03 00                	add    (%rax),%eax
			34b: R_X86_64_64	.bss
 34c:	00 00                	add    %al,(%rax)
 34e:	00 00                	add    %al,(%rax)
 350:	00 00                	add    %al,(%rax)
 352:	00 13                	add    %dl,(%rbx)
 354:	00 00                	add    %al,(%rax)
			354: R_X86_64_32	.debug_str+0x109
 356:	00 00                	add    %al,(%rax)
 358:	01 0b                	add    %ecx,(%rbx)
 35a:	0d 65 00 00 00       	or     $0x65,%eax
 35f:	02                   	.byte 0x2
 360:	91                   	xchg   %eax,%ecx
 361:	6c                   	insb   (%dx),%es:(%rdi)
 362:	00 00                	add    %al,(%rax)

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1316 <static_var.2317+0x30b1312>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    (%rsi),%ecx
   b:	11 01                	adc    %eax,(%rcx)
   d:	12 07                	adc    (%rdi),%al
   f:	10 17                	adc    %dl,(%rdi)
  11:	00 00                	add    %al,(%rax)
  13:	02 16                	add    (%rsi),%dl
  15:	00 03                	add    %al,(%rbx)
  17:	0e                   	(bad)  
  18:	3a 0b                	cmp    (%rbx),%cl
  1a:	3b 0b                	cmp    (%rbx),%ecx
  1c:	39 0b                	cmp    %ecx,(%rbx)
  1e:	49 13 00             	adc    (%r8),%rax
  21:	00 03                	add    %al,(%rbx)
  23:	24 00                	and    $0x0,%al
  25:	0b 0b                	or     (%rbx),%ecx
  27:	3e 0b 03             	or     %ds:(%rbx),%eax
  2a:	0e                   	(bad)  
  2b:	00 00                	add    %al,(%rax)
  2d:	04 0f                	add    $0xf,%al
  2f:	00 0b                	add    %cl,(%rbx)
  31:	0b 00                	or     (%rax),%eax
  33:	00 05 24 00 0b 0b    	add    %al,0xb0b0024(%rip)        # b0b005d <static_var.2317+0xb0b0059>
  39:	3e 0b 03             	or     %ds:(%rbx),%eax
  3c:	08 00                	or     %al,(%rax)
  3e:	00 06                	add    %al,(%rsi)
  40:	26 00 49 13          	add    %cl,%es:0x13(%rcx)
  44:	00 00                	add    %al,(%rax)
  46:	07                   	(bad)  
  47:	0f 00 0b             	str    (%rbx)
  4a:	0b 49 13             	or     0x13(%rcx),%ecx
  4d:	00 00                	add    %al,(%rax)
  4f:	08 13                	or     %dl,(%rbx)
  51:	01 03                	add    %eax,(%rbx)
  53:	0e                   	(bad)  
  54:	0b 0b                	or     (%rbx),%ecx
  56:	3a 0b                	cmp    (%rbx),%cl
  58:	3b 0b                	cmp    (%rbx),%ecx
  5a:	39 0b                	cmp    %ecx,(%rbx)
  5c:	01 13                	add    %edx,(%rbx)
  5e:	00 00                	add    %al,(%rax)
  60:	09 0d 00 03 0e 3a    	or     %ecx,0x3a0e0300(%rip)        # 3a0e0366 <static_var.2317+0x3a0e0362>
  66:	0b 3b                	or     (%rbx),%edi
  68:	0b 39                	or     (%rcx),%edi
  6a:	0b 49 13             	or     0x13(%rcx),%ecx
  6d:	38 0b                	cmp    %cl,(%rbx)
  6f:	00 00                	add    %al,(%rax)
  71:	0a 16                	or     (%rsi),%dl
  73:	00 03                	add    %al,(%rbx)
  75:	0e                   	(bad)  
  76:	3a 0b                	cmp    (%rbx),%cl
  78:	3b 0b                	cmp    (%rbx),%ecx
  7a:	39 0b                	cmp    %ecx,(%rbx)
  7c:	00 00                	add    %al,(%rax)
  7e:	0b 13                	or     (%rbx),%edx
  80:	00 03                	add    %al,(%rbx)
  82:	0e                   	(bad)  
  83:	3c 19                	cmp    $0x19,%al
  85:	00 00                	add    %al,(%rax)
  87:	0c 01                	or     $0x1,%al
  89:	01 49 13             	add    %ecx,0x13(%rcx)
  8c:	01 13                	add    %edx,(%rbx)
  8e:	00 00                	add    %al,(%rax)
  90:	0d 21 00 49 13       	or     $0x13490021,%eax
  95:	2f                   	(bad)  
  96:	0b 00                	or     (%rax),%eax
  98:	00 0e                	add    %cl,(%rsi)
  9a:	34 00                	xor    $0x0,%al
  9c:	03 0e                	add    (%rsi),%ecx
  9e:	3a 0b                	cmp    (%rbx),%cl
  a0:	3b 0b                	cmp    (%rbx),%ecx
  a2:	39 0b                	cmp    %ecx,(%rbx)
  a4:	49 13 3f             	adc    (%r15),%rdi
  a7:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
  aa:	00 00                	add    %al,(%rax)
  ac:	0f 21 00             	mov    %db0,%rax
  af:	00 00                	add    %al,(%rax)
  b1:	10 34 00             	adc    %dh,(%rax,%rax,1)
  b4:	03 0e                	add    (%rsi),%ecx
  b6:	3a 0b                	cmp    (%rbx),%cl
  b8:	3b 0b                	cmp    (%rbx),%ecx
  ba:	39 0b                	cmp    %ecx,(%rbx)
  bc:	49 13 3f             	adc    (%r15),%rdi
  bf:	19 02                	sbb    %eax,(%rdx)
  c1:	18 00                	sbb    %al,(%rax)
  c3:	00 11                	add    %dl,(%rcx)
  c5:	2e 01 3f             	add    %edi,%cs:(%rdi)
  c8:	19 03                	sbb    %eax,(%rbx)
  ca:	0e                   	(bad)  
  cb:	3a 0b                	cmp    (%rbx),%cl
  cd:	3b 0b                	cmp    (%rbx),%ecx
  cf:	39 0b                	cmp    %ecx,(%rbx)
  d1:	11 01                	adc    %eax,(%rcx)
  d3:	12 07                	adc    (%rdi),%al
  d5:	40 18 96 42 19 00 00 	sbb    %dl,0x1942(%rsi)
  dc:	12 34 00             	adc    (%rax,%rax,1),%dh
  df:	03 0e                	add    (%rsi),%ecx
  e1:	3a 0b                	cmp    (%rbx),%cl
  e3:	3b 0b                	cmp    (%rbx),%ecx
  e5:	39 0b                	cmp    %ecx,(%rbx)
  e7:	49 13 1c 06          	adc    (%r14,%rax,1),%rbx
  eb:	00 00                	add    %al,(%rax)
  ed:	13 34 00             	adc    (%rax,%rax,1),%esi
  f0:	03 0e                	add    (%rsi),%ecx
  f2:	3a 0b                	cmp    (%rbx),%cl
  f4:	3b 0b                	cmp    (%rbx),%ecx
  f6:	39 0b                	cmp    %ecx,(%rbx)
  f8:	49 13 02             	adc    (%r10),%rax
  fb:	18 00                	sbb    %al,(%rax)
  fd:	00 00                	add    %al,(%rax)

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
			6: R_X86_64_32	.debug_info
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	00 00                	add    %al,(%rax)
			10: R_X86_64_64	.text
  12:	00 00                	add    %al,(%rax)
  14:	00 00                	add    %al,(%rax)
  16:	00 00                	add    %al,(%rax)
  18:	22 00                	and    (%rax),%al
  1a:	00 00                	add    %al,(%rax)
  1c:	00 00                	add    %al,(%rax)
  1e:	00 00                	add    %al,(%rax)
  20:	00 00                	add    %al,(%rax)
  22:	00 00                	add    %al,(%rax)
  24:	00 00                	add    %al,(%rax)
  26:	00 00                	add    %al,(%rax)
  28:	00 00                	add    %al,(%rax)
  2a:	00 00                	add    %al,(%rax)
  2c:	00 00                	add    %al,(%rax)
  2e:	00 00                	add    %al,(%rax)

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	11 01                	adc    %eax,(%rcx)
   2:	00 00                	add    %al,(%rax)
   4:	03 00                	add    (%rax),%eax
   6:	ee                   	out    %al,(%dx)
   7:	00 00                	add    %al,(%rax)
   9:	00 01                	add    %al,(%rcx)
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	01 00                	add    %eax,(%rax)
  19:	00 01                	add    %al,(%rcx)
  1b:	2f                   	(bad)  
  1c:	75 73                	jne    91 <.debug_line+0x91>
  1e:	72 2f                	jb     4f <.debug_line+0x4f>
  20:	6c                   	insb   (%dx),%es:(%rdi)
  21:	69 62 2f 67 63 63 2f 	imul   $0x2f636367,0x2f(%rdx),%esp
  28:	78 38                	js     62 <.debug_line+0x62>
  2a:	36 5f                	ss pop %rdi
  2c:	36 34 2d             	ss xor $0x2d,%al
  2f:	6c                   	insb   (%dx),%es:(%rdi)
  30:	69 6e 75 78 2d 67 6e 	imul   $0x6e672d78,0x75(%rsi),%ebp
  37:	75 2f                	jne    68 <.debug_line+0x68>
  39:	39 2f                	cmp    %ebp,(%rdi)
  3b:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  42:	00 2f                	add    %ch,(%rdi)
  44:	75 73                	jne    b9 <.debug_line+0xb9>
  46:	72 2f                	jb     77 <.debug_line+0x77>
  48:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  4f:	2f                   	(bad)  
  50:	78 38                	js     8a <.debug_line+0x8a>
  52:	36 5f                	ss pop %rdi
  54:	36 34 2d             	ss xor $0x2d,%al
  57:	6c                   	insb   (%dx),%es:(%rdi)
  58:	69 6e 75 78 2d 67 6e 	imul   $0x6e672d78,0x75(%rsi),%ebp
  5f:	75 2f                	jne    90 <.debug_line+0x90>
  61:	62                   	(bad)  
  62:	69 74 73 00 2f 75 73 	imul   $0x7273752f,0x0(%rbx,%rsi,2),%esi
  69:	72 
  6a:	2f                   	(bad)  
  6b:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  72:	2f                   	(bad)  
  73:	78 38                	js     ad <.debug_line+0xad>
  75:	36 5f                	ss pop %rdi
  77:	36 34 2d             	ss xor $0x2d,%al
  7a:	6c                   	insb   (%dx),%es:(%rdi)
  7b:	69 6e 75 78 2d 67 6e 	imul   $0x6e672d78,0x75(%rsi),%ebp
  82:	75 2f                	jne    b3 <.debug_line+0xb3>
  84:	62                   	(bad)  
  85:	69 74 73 2f 74 79 70 	imul   $0x65707974,0x2f(%rbx,%rsi,2),%esi
  8c:	65 
  8d:	73 00                	jae    8f <.debug_line+0x8f>
  8f:	2f                   	(bad)  
  90:	75 73                	jne    105 <.debug_line+0x105>
  92:	72 2f                	jb     c3 <.debug_line+0xc3>
  94:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  9b:	00 00                	add    %al,(%rax)
  9d:	68 65 6c 6c 6f       	pushq  $0x6f6c6c65
  a2:	32 2e                	xor    (%rsi),%ch
  a4:	63 00                	movslq (%rax),%eax
  a6:	00 00                	add    %al,(%rax)
  a8:	00 73 74             	add    %dh,0x74(%rbx)
  ab:	64 64 65 66 2e 68 00 	fs fs gs cs pushw $0x100
  b2:	01 
  b3:	00 00                	add    %al,(%rax)
  b5:	74 79                	je     130 <static_var.2317+0x12c>
  b7:	70 65                	jo     11e <static_var.2317+0x11a>
  b9:	73 2e                	jae    e9 <.debug_line+0xe9>
  bb:	68 00 02 00 00       	pushq  $0x200
  c0:	73 74                	jae    136 <static_var.2317+0x132>
  c2:	72 75                	jb     139 <static_var.2317+0x135>
  c4:	63 74 5f 46          	movslq 0x46(%rdi,%rbx,2),%esi
  c8:	49                   	rex.WB
  c9:	4c                   	rex.WR
  ca:	45                   	rex.RB
  cb:	2e 68 00 03 00 00    	cs pushq $0x300
  d1:	46                   	rex.RX
  d2:	49                   	rex.WB
  d3:	4c                   	rex.WR
  d4:	45                   	rex.RB
  d5:	2e 68 00 03 00 00    	cs pushq $0x300
  db:	73 74                	jae    151 <static_var.2317+0x14d>
  dd:	64 69 6f 2e 68 00 04 	imul   $0x40068,%fs:0x2e(%rdi),%ebp
  e4:	00 
  e5:	00 73 79             	add    %dh,0x79(%rbx)
  e8:	73 5f                	jae    149 <static_var.2317+0x145>
  ea:	65 72 72             	gs jb  15f <static_var.2317+0x15b>
  ed:	6c                   	insb   (%dx),%es:(%rdi)
  ee:	69 73 74 2e 68 00 02 	imul   $0x200682e,0x74(%rbx),%esi
  f5:	00 00                	add    %al,(%rax)
  f7:	00 05 01 00 09 02    	add    %al,0x2090001(%rip)        # 20900fe <static_var.2317+0x20900fa>
  fd:	00 00                	add    %al,(%rax)
			fd: R_X86_64_64	.text
  ff:	00 00                	add    %al,(%rax)
 101:	00 00                	add    %al,(%rax)
 103:	00 00                	add    %al,(%rax)
 105:	18 05 0d be 05 09    	sbb    %al,0x905be0d(%rip)        # 905bf18 <static_var.2317+0x905bf14>
 10b:	76 bb                	jbe    c8 <.debug_line+0xc8>
 10d:	05 01 21 02 02       	add    $0x2022101,%eax
 112:	00 01                	add    %al,(%rcx)
 114:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	5f                   	pop    %rdi
   1:	49                   	rex.WB
   2:	4f 5f                	rex.WRXB pop %r15
   4:	62                   	(bad)  
   5:	75 66                	jne    6d <.debug_str+0x6d>
   7:	5f                   	pop    %rdi
   8:	65 6e                	outsb  %gs:(%rsi),(%dx)
   a:	64 00 5f 6f          	add    %bl,%fs:0x6f(%rdi)
   e:	6c                   	insb   (%dx),%es:(%rdi)
   f:	64 5f                	fs pop %rdi
  11:	6f                   	outsl  %ds:(%rsi),(%dx)
  12:	66 66 73 65          	data16 data16 jae 7b <.debug_str+0x7b>
  16:	74 00                	je     18 <.debug_str+0x18>
  18:	73 74                	jae    8e <.debug_str+0x8e>
  1a:	61                   	(bad)  
  1b:	74 69                	je     86 <.debug_str+0x86>
  1d:	63 5f 76             	movslq 0x76(%rdi),%ebx
  20:	61                   	(bad)  
  21:	72 5f                	jb     82 <.debug_str+0x82>
  23:	75 6e                	jne    93 <.debug_str+0x93>
  25:	69 6e 69 74 00 73 79 	imul   $0x79730074,0x69(%rsi),%ebp
  2c:	73 5f                	jae    8d <.debug_str+0x8d>
  2e:	6e                   	outsb  %ds:(%rsi),(%dx)
  2f:	65 72 72             	gs jb  a4 <.debug_str+0xa4>
  32:	00 5f 49             	add    %bl,0x49(%rdi)
  35:	4f 5f                	rex.WRXB pop %r15
  37:	73 61                	jae    9a <.debug_str+0x9a>
  39:	76 65                	jbe    a0 <.debug_str+0xa0>
  3b:	5f                   	pop    %rdi
  3c:	65 6e                	outsb  %gs:(%rsi),(%dx)
  3e:	64 00 73 68          	add    %dh,%fs:0x68(%rbx)
  42:	6f                   	outsl  %ds:(%rsi),(%dx)
  43:	72 74                	jb     b9 <.debug_str+0xb9>
  45:	20 69 6e             	and    %ch,0x6e(%rcx)
  48:	74 00                	je     4a <.debug_str+0x4a>
  4a:	73 69                	jae    b5 <.debug_str+0xb5>
  4c:	7a 65                	jp     b3 <.debug_str+0xb3>
  4e:	5f                   	pop    %rdi
  4f:	74 00                	je     51 <.debug_str+0x51>
  51:	5f                   	pop    %rdi
  52:	6f                   	outsl  %ds:(%rsi),(%dx)
  53:	66 66 73 65          	data16 data16 jae bc <.debug_str+0xbc>
  57:	74 00                	je     59 <.debug_str+0x59>
  59:	73 74                	jae    cf <.debug_str+0xcf>
  5b:	61                   	(bad)  
  5c:	74 69                	je     c7 <.debug_str+0xc7>
  5e:	63 5f 76             	movslq 0x76(%rdi),%ebx
  61:	61                   	(bad)  
  62:	72 00                	jb     64 <.debug_str+0x64>
  64:	5f                   	pop    %rdi
  65:	49                   	rex.WB
  66:	4f 5f                	rex.WRXB pop %r15
  68:	77 72                	ja     dc <.debug_str+0xdc>
  6a:	69 74 65 5f 70 74 72 	imul   $0x727470,0x5f(%rbp,%riz,2),%esi
  71:	00 
  72:	5f                   	pop    %rdi
  73:	66 6c                	data16 insb (%dx),%es:(%rdi)
  75:	61                   	(bad)  
  76:	67 73 00             	addr32 jae 79 <.debug_str+0x79>
  79:	67 6c                	insb   (%dx),%es:(%edi)
  7b:	6f                   	outsl  %ds:(%rsi),(%dx)
  7c:	62 61 6c 5f 63       	(bad)
  81:	6f                   	outsl  %ds:(%rsi),(%dx)
  82:	6e                   	outsb  %ds:(%rsi),(%dx)
  83:	73 74                	jae    f9 <.debug_str+0xf9>
  85:	00 5f 49             	add    %bl,0x49(%rdi)
  88:	4f 5f                	rex.WRXB pop %r15
  8a:	62                   	(bad)  
  8b:	75 66                	jne    f3 <.debug_str+0xf3>
  8d:	5f                   	pop    %rdi
  8e:	62 61                	(bad)  
  90:	73 65                	jae    f7 <.debug_str+0xf7>
  92:	00 5f 6d             	add    %bl,0x6d(%rdi)
  95:	61                   	(bad)  
  96:	72 6b                	jb     103 <.debug_str+0x103>
  98:	65 72 73             	gs jb  10e <.debug_str+0x10e>
  9b:	00 5f 49             	add    %bl,0x49(%rdi)
  9e:	4f 5f                	rex.WRXB pop %r15
  a0:	72 65                	jb     107 <.debug_str+0x107>
  a2:	61                   	(bad)  
  a3:	64 5f                	fs pop %rdi
  a5:	65 6e                	outsb  %gs:(%rsi),(%dx)
  a7:	64 00 5f 66          	add    %bl,%fs:0x66(%rdi)
  ab:	72 65                	jb     112 <.debug_str+0x112>
  ad:	65 72 65             	gs jb  115 <.debug_str+0x115>
  b0:	73 5f                	jae    111 <.debug_str+0x111>
  b2:	62                   	(bad)  
  b3:	75 66                	jne    11b <.debug_str+0x11b>
  b5:	00 73 74             	add    %dh,0x74(%rbx)
  b8:	64 65 72 72          	fs gs jb 12e <.debug_str+0x12e>
  bc:	00 5f 6c             	add    %bl,0x6c(%rdi)
  bf:	6f                   	outsl  %ds:(%rsi),(%dx)
  c0:	63 6b 00             	movslq 0x0(%rbx),%ebp
  c3:	6c                   	insb   (%dx),%es:(%rdi)
  c4:	6f                   	outsl  %ds:(%rsi),(%dx)
  c5:	6e                   	outsb  %ds:(%rsi),(%dx)
  c6:	67 20 69 6e          	and    %ch,0x6e(%ecx)
  ca:	74 00                	je     cc <.debug_str+0xcc>
  cc:	2f                   	(bad)  
  cd:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
  d2:	6c                   	insb   (%dx),%es:(%rdi)
  d3:	69 72 75 6e 6d 69 6e 	imul   $0x6e696d6e,0x75(%rdx),%esi
  da:	2f                   	(bad)  
  db:	52                   	push   %rdx
  dc:	56                   	push   %rsi
  dd:	4f 53                	rex.WRXB push %r11
  df:	2f                   	(bad)  
  e0:	52                   	push   %rdx
  e1:	56                   	push   %rsi
  e2:	4f 53                	rex.WRXB push %r11
  e4:	2f                   	(bad)  
  e5:	65 78 65             	gs js  14d <.debug_str+0x14d>
  e8:	72 63                	jb     14d <.debug_str+0x14d>
  ea:	69 73 65 2f 30 33 00 	imul   $0x33302f,0x65(%rbx),%esi
  f1:	5f                   	pop    %rdi
  f2:	63 75 72             	movslq 0x72(%rbp),%esi
  f5:	5f                   	pop    %rdi
  f6:	63 6f 6c             	movslq 0x6c(%rdi),%ebp
  f9:	75 6d                	jne    168 <.debug_str+0x168>
  fb:	6e                   	outsb  %ds:(%rsi),(%dx)
  fc:	00 67 6c             	add    %ah,0x6c(%rdi)
  ff:	6f                   	outsl  %ds:(%rsi),(%dx)
 100:	62 61 6c 5f 69       	(bad)
 105:	6e                   	outsb  %ds:(%rsi),(%dx)
 106:	69 74 00 61 75 74 6f 	imul   $0x5f6f7475,0x61(%rax,%rax,1),%esi
 10d:	5f 
 10e:	76 61                	jbe    171 <.debug_str+0x171>
 110:	72 00                	jb     112 <.debug_str+0x112>
 112:	5f                   	pop    %rdi
 113:	49                   	rex.WB
 114:	4f 5f                	rex.WRXB pop %r15
 116:	46                   	rex.RX
 117:	49                   	rex.WB
 118:	4c                   	rex.WR
 119:	45 00 75 6e          	add    %r14b,0x6e(%r13)
 11d:	73 69                	jae    188 <.debug_str+0x188>
 11f:	67 6e                	outsb  %ds:(%esi),(%dx)
 121:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
 126:	61                   	(bad)  
 127:	72 00                	jb     129 <.debug_str+0x129>
 129:	73 69                	jae    194 <.debug_str+0x194>
 12b:	67 6e                	outsb  %ds:(%esi),(%dx)
 12d:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
 132:	61                   	(bad)  
 133:	72 00                	jb     135 <.debug_str+0x135>
 135:	5f                   	pop    %rdi
 136:	63 6f 64             	movslq 0x64(%rdi),%ebp
 139:	65 63 76 74          	movslq %gs:0x74(%rsi),%esi
 13d:	00 75 6e             	add    %dh,0x6e(%rbp)
 140:	73 69                	jae    1ab <.debug_str+0x1ab>
 142:	67 6e                	outsb  %ds:(%esi),(%dx)
 144:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 149:	74 00                	je     14b <.debug_str+0x14b>
 14b:	5f                   	pop    %rdi
 14c:	49                   	rex.WB
 14d:	4f 5f                	rex.WRXB pop %r15
 14f:	6d                   	insl   (%dx),%es:(%rdi)
 150:	61                   	(bad)  
 151:	72 6b                	jb     1be <.debug_str+0x1be>
 153:	65 72 00             	gs jb  156 <.debug_str+0x156>
 156:	5f                   	pop    %rdi
 157:	73 68                	jae    1c1 <.debug_str+0x1c1>
 159:	6f                   	outsl  %ds:(%rsi),(%dx)
 15a:	72 74                	jb     1d0 <.debug_str+0x1d0>
 15c:	62                   	(bad)  
 15d:	75 66                	jne    1c5 <.debug_str+0x1c5>
 15f:	00 5f 49             	add    %bl,0x49(%rdi)
 162:	4f 5f                	rex.WRXB pop %r15
 164:	77 72                	ja     1d8 <.debug_str+0x1d8>
 166:	69 74 65 5f 62 61 73 	imul   $0x65736162,0x5f(%rbp,%riz,2),%esi
 16d:	65 
 16e:	00 5f 75             	add    %bl,0x75(%rdi)
 171:	6e                   	outsb  %ds:(%rsi),(%dx)
 172:	75 73                	jne    1e7 <.debug_str+0x1e7>
 174:	65 64 32 00          	gs xor %fs:(%rax),%al
 178:	5f                   	pop    %rdi
 179:	49                   	rex.WB
 17a:	4f 5f                	rex.WRXB pop %r15
 17c:	72 65                	jb     1e3 <.debug_str+0x1e3>
 17e:	61                   	(bad)  
 17f:	64 5f                	fs pop %rdi
 181:	70 74                	jo     1f7 <.debug_str+0x1f7>
 183:	72 00                	jb     185 <.debug_str+0x185>
 185:	73 68                	jae    1ef <.debug_str+0x1ef>
 187:	6f                   	outsl  %ds:(%rsi),(%dx)
 188:	72 74                	jb     1fe <.debug_str+0x1fe>
 18a:	20 75 6e             	and    %dh,0x6e(%rbp)
 18d:	73 69                	jae    1f8 <.debug_str+0x1f8>
 18f:	67 6e                	outsb  %ds:(%esi),(%dx)
 191:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 196:	74 00                	je     198 <.debug_str+0x198>
 198:	63 68 61             	movslq 0x61(%rax),%ebp
 19b:	72 00                	jb     19d <.debug_str+0x19d>
 19d:	6d                   	insl   (%dx),%es:(%rdi)
 19e:	61                   	(bad)  
 19f:	69 6e 00 47 4e 55 20 	imul   $0x20554e47,0x0(%rsi),%ebp
 1a6:	43 31 37             	rex.XB xor %esi,(%r15)
 1a9:	20 39                	and    %bh,(%rcx)
 1ab:	2e 34 2e             	cs xor $0x2e,%al
 1ae:	30 20                	xor    %ah,(%rax)
 1b0:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
 1b5:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
 1bb:	72 69                	jb     226 <.debug_str+0x226>
 1bd:	63 20                	movslq (%rax),%esp
 1bf:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
 1c4:	68 3d 78 38 36       	pushq  $0x3638783d
 1c9:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
 1ce:	67 20 2d 4f 30 20 2d 	and    %ch,0x2d20304f(%eip)        # 2d203224 <static_var.2317+0x2d203220>
 1d5:	66 61                	data16 (bad) 
 1d7:	73 79                	jae    252 <.debug_str+0x252>
 1d9:	6e                   	outsb  %ds:(%rsi),(%dx)
 1da:	63 68 72             	movslq 0x72(%rax),%ebp
 1dd:	6f                   	outsl  %ds:(%rsi),(%dx)
 1de:	6e                   	outsb  %ds:(%rsi),(%dx)
 1df:	6f                   	outsl  %ds:(%rsi),(%dx)
 1e0:	75 73                	jne    255 <.debug_str+0x255>
 1e2:	2d 75 6e 77 69       	sub    $0x69776e75,%eax
 1e7:	6e                   	outsb  %ds:(%rsi),(%dx)
 1e8:	64 2d 74 61 62 6c    	fs sub $0x6c626174,%eax
 1ee:	65 73 20             	gs jae 211 <.debug_str+0x211>
 1f1:	2d 66 73 74 61       	sub    $0x61747366,%eax
 1f6:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
 1f9:	70 72                	jo     26d <.debug_str+0x26d>
 1fb:	6f                   	outsl  %ds:(%rsi),(%dx)
 1fc:	74 65                	je     263 <.debug_str+0x263>
 1fe:	63 74 6f 72          	movslq 0x72(%rdi,%rbp,2),%esi
 202:	2d 73 74 72 6f       	sub    $0x6f727473,%eax
 207:	6e                   	outsb  %ds:(%rsi),(%dx)
 208:	67 20 2d 66 73 74 61 	and    %ch,0x61747366(%eip)        # 61747575 <static_var.2317+0x61747571>
 20f:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
 212:	63 6c 61 73          	movslq 0x73(%rcx,%riz,2),%ebp
 216:	68 2d 70 72 6f       	pushq  $0x6f72702d
 21b:	74 65                	je     282 <.debug_str+0x282>
 21d:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
 221:	6e                   	outsb  %ds:(%rsi),(%dx)
 222:	20 2d 66 63 66 2d    	and    %ch,0x2d666366(%rip)        # 2d66658e <static_var.2317+0x2d66658a>
 228:	70 72                	jo     29c <.debug_str+0x29c>
 22a:	6f                   	outsl  %ds:(%rsi),(%dx)
 22b:	74 65                	je     292 <.debug_str+0x292>
 22d:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
 231:	6e                   	outsb  %ds:(%rsi),(%dx)
 232:	00 5f 77             	add    %bl,0x77(%rdi)
 235:	69 64 65 5f 64 61 74 	imul   $0x61746164,0x5f(%rbp,%riz,2),%esp
 23c:	61 
 23d:	00 5f 66             	add    %bl,0x66(%rdi)
 240:	72 65                	jb     2a7 <.debug_str+0x2a7>
 242:	65 72 65             	gs jb  2aa <.debug_str+0x2aa>
 245:	73 5f                	jae    2a6 <.debug_str+0x2a6>
 247:	6c                   	insb   (%dx),%es:(%rdi)
 248:	69 73 74 00 5f 5f 70 	imul   $0x705f5f00,0x74(%rbx),%esi
 24f:	61                   	(bad)  
 250:	64 35 00 5f 49 4f    	fs xor $0x4f495f00,%eax
 256:	5f                   	pop    %rdi
 257:	63 6f 64             	movslq 0x64(%rdi),%ebp
 25a:	65 63 76 74          	movslq %gs:0x74(%rsi),%esi
 25e:	00 6c 6f 6e          	add    %ch,0x6e(%rdi,%rbp,2)
 262:	67 20 75 6e          	and    %dh,0x6e(%ebp)
 266:	73 69                	jae    2d1 <.debug_str+0x2d1>
 268:	67 6e                	outsb  %ds:(%esi),(%dx)
 26a:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 26f:	74 00                	je     271 <.debug_str+0x271>
 271:	5f                   	pop    %rdi
 272:	49                   	rex.WB
 273:	4f 5f                	rex.WRXB pop %r15
 275:	77 72                	ja     2e9 <.debug_str+0x2e9>
 277:	69 74 65 5f 65 6e 64 	imul   $0x646e65,0x5f(%rbp,%riz,2),%esi
 27e:	00 
 27f:	5f                   	pop    %rdi
 280:	5f                   	pop    %rdi
 281:	6f                   	outsl  %ds:(%rsi),(%dx)
 282:	66 66 36 34 5f       	data16 data16 ss xor $0x5f,%al
 287:	74 00                	je     289 <.debug_str+0x289>
 289:	5f                   	pop    %rdi
 28a:	5f                   	pop    %rdi
 28b:	6f                   	outsl  %ds:(%rsi),(%dx)
 28c:	66 66 5f             	data16 pop %di
 28f:	74 00                	je     291 <.debug_str+0x291>
 291:	5f                   	pop    %rdi
 292:	63 68 61             	movslq 0x61(%rax),%ebp
 295:	69 6e 00 5f 49 4f 5f 	imul   $0x5f4f495f,0x0(%rsi),%ebp
 29c:	77 69                	ja     307 <.debug_str+0x307>
 29e:	64 65 5f             	fs gs pop %rdi
 2a1:	64 61                	fs (bad) 
 2a3:	74 61                	je     306 <.debug_str+0x306>
 2a5:	00 5f 49             	add    %bl,0x49(%rdi)
 2a8:	4f 5f                	rex.WRXB pop %r15
 2aa:	62 61                	(bad)  
 2ac:	63 6b 75             	movslq 0x75(%rbx),%ebp
 2af:	70 5f                	jo     310 <.debug_str+0x310>
 2b1:	62 61                	(bad)  
 2b3:	73 65                	jae    31a <.debug_str+0x31a>
 2b5:	00 73 74             	add    %dh,0x74(%rbx)
 2b8:	64 69 6e 00 5f 66 6c 	imul   $0x616c665f,%fs:0x0(%rsi),%ebp
 2bf:	61 
 2c0:	67 73 32             	addr32 jae 2f5 <.debug_str+0x2f5>
 2c3:	00 5f 6d             	add    %bl,0x6d(%rdi)
 2c6:	6f                   	outsl  %ds:(%rsi),(%dx)
 2c7:	64 65 00 5f 49       	fs add %bl,%gs:0x49(%rdi)
 2cc:	4f 5f                	rex.WRXB pop %r15
 2ce:	72 65                	jb     335 <static_var.2317+0x331>
 2d0:	61                   	(bad)  
 2d1:	64 5f                	fs pop %rdi
 2d3:	62 61                	(bad)  
 2d5:	73 65                	jae    33c <static_var.2317+0x338>
 2d7:	00 5f 76             	add    %bl,0x76(%rdi)
 2da:	74 61                	je     33d <static_var.2317+0x339>
 2dc:	62                   	(bad)  
 2dd:	6c                   	insb   (%dx),%es:(%rdi)
 2de:	65 5f                	gs pop %rdi
 2e0:	6f                   	outsl  %ds:(%rsi),(%dx)
 2e1:	66 66 73 65          	data16 data16 jae 34a <static_var.2317+0x346>
 2e5:	74 00                	je     2e7 <.debug_str+0x2e7>
 2e7:	5f                   	pop    %rdi
 2e8:	49                   	rex.WB
 2e9:	4f 5f                	rex.WRXB pop %r15
 2eb:	73 61                	jae    34e <static_var.2317+0x34a>
 2ed:	76 65                	jbe    354 <static_var.2317+0x350>
 2ef:	5f                   	pop    %rdi
 2f0:	62 61                	(bad)  
 2f2:	73 65                	jae    359 <static_var.2317+0x355>
 2f4:	00 73 79             	add    %dh,0x79(%rbx)
 2f7:	73 5f                	jae    358 <static_var.2317+0x354>
 2f9:	65 72 72             	gs jb  36e <static_var.2317+0x36a>
 2fc:	6c                   	insb   (%dx),%es:(%rdi)
 2fd:	69 73 74 00 5f 66 69 	imul   $0x69665f00,0x74(%rbx),%esi
 304:	6c                   	insb   (%dx),%es:(%rdi)
 305:	65 6e                	outsb  %gs:(%rsi),(%dx)
 307:	6f                   	outsl  %ds:(%rsi),(%dx)
 308:	00 46 49             	add    %al,0x49(%rsi)
 30b:	4c                   	rex.WR
 30c:	45 00 73 74          	add    %r14b,0x74(%r11)
 310:	64 6f                	outsl  %fs:(%rsi),(%dx)
 312:	75 74                	jne    388 <static_var.2317+0x384>
 314:	00 5f 49             	add    %bl,0x49(%rdi)
 317:	4f 5f                	rex.WRXB pop %r15
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	6f                   	outsl  %ds:(%rsi),(%dx)
 31b:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 31e:	74 00                	je     320 <.debug_str+0x320>
 320:	68 65 6c 6c 6f       	pushq  $0x6f6c6c65
 325:	32 2e                	xor    (%rsi),%ch
 327:	63 00                	movslq (%rax),%eax

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 47 43             	add    %al,0x43(%rdi)
   3:	43 3a 20             	rex.XB cmp (%r8),%spl
   6:	28 55 62             	sub    %dl,0x62(%rbp)
   9:	75 6e                	jne    79 <static_var.2317+0x75>
   b:	74 75                	je     82 <static_var.2317+0x7e>
   d:	20 39                	and    %bh,(%rcx)
   f:	2e 34 2e             	cs xor $0x2e,%al
  12:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627549 <static_var.2317+0x75627545>
  18:	6e                   	outsb  %ds:(%rsi),(%dx)
  19:	74 75                	je     90 <static_var.2317+0x8c>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	30 2e                	xor    %ch,(%rsi)
  20:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  23:	31 29                	xor    %ebp,(%rcx)
  25:	20 39                	and    %bh,(%rcx)
  27:	2e 34 2e             	cs xor $0x2e,%al
  2a:	30 00                	xor    %al,(%rax)

Disassembly of section .note.gnu.property:

0000000000000000 <.note.gnu.property>:
   0:	04 00                	add    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	10 00                	adc    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	05 00 00 00 47       	add    $0x47000000,%eax
   d:	4e 55                	rex.WRX push %rbp
   f:	00 02                	add    %al,(%rdx)
  11:	00 00                	add    %al,(%rax)
  13:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
  17:	00 03                	add    %al,(%rbx)
  19:	00 00                	add    %al,(%rax)
  1b:	00 00                	add    %al,(%rax)
  1d:	00 00                	add    %al,(%rax)
  1f:	00                   	.byte 0x0

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	01 7a 52             	add    %edi,0x52(%rdx)
   b:	00 01                	add    %al,(%rcx)
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    %ebx,(%rbx)
  11:	0c 07                	or     $0x7,%al
  13:	08 90 01 00 00 1c    	or     %dl,0x1c000001(%rax)
  19:	00 00                	add    %al,(%rax)
  1b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  1e:	00 00                	add    %al,(%rax)
  20:	00 00                	add    %al,(%rax)
			20: R_X86_64_PC32	.text
  22:	00 00                	add    %al,(%rax)
  24:	22 00                	and    (%rax),%al
  26:	00 00                	add    %al,(%rax)
  28:	00 45 0e             	add    %al,0xe(%rbp)
  2b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  31:	59                   	pop    %rcx
  32:	0c 07                	or     $0x7,%al
  34:	08 00                	or     %al,(%rax)
  36:	00 00                	add    %al,(%rax)
